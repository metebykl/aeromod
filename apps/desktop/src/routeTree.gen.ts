/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OnboardingImport } from './routes/onboarding'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppVerifyImport } from './routes/_app/verify'
import { Route as AppStatisticsImport } from './routes/_app/statistics'
import { Route as AppSettingsImport } from './routes/_app/settings'
import { Route as AppAddonsAddonIdImport } from './routes/_app/addons/$addonId'

// Create/Update Routes

const OnboardingRoute = OnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppVerifyRoute = AppVerifyImport.update({
  id: '/verify',
  path: '/verify',
  getParentRoute: () => AppRoute,
} as any)

const AppStatisticsRoute = AppStatisticsImport.update({
  id: '/statistics',
  path: '/statistics',
  getParentRoute: () => AppRoute,
} as any)

const AppSettingsRoute = AppSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)

const AppAddonsAddonIdRoute = AppAddonsAddonIdImport.update({
  id: '/addons/$addonId',
  path: '/addons/$addonId',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingImport
      parentRoute: typeof rootRoute
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsImport
      parentRoute: typeof AppImport
    }
    '/_app/statistics': {
      id: '/_app/statistics'
      path: '/statistics'
      fullPath: '/statistics'
      preLoaderRoute: typeof AppStatisticsImport
      parentRoute: typeof AppImport
    }
    '/_app/verify': {
      id: '/_app/verify'
      path: '/verify'
      fullPath: '/verify'
      preLoaderRoute: typeof AppVerifyImport
      parentRoute: typeof AppImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/addons/$addonId': {
      id: '/_app/addons/$addonId'
      path: '/addons/$addonId'
      fullPath: '/addons/$addonId'
      preLoaderRoute: typeof AppAddonsAddonIdImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppSettingsRoute: typeof AppSettingsRoute
  AppStatisticsRoute: typeof AppStatisticsRoute
  AppVerifyRoute: typeof AppVerifyRoute
  AppIndexRoute: typeof AppIndexRoute
  AppAddonsAddonIdRoute: typeof AppAddonsAddonIdRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppSettingsRoute: AppSettingsRoute,
  AppStatisticsRoute: AppStatisticsRoute,
  AppVerifyRoute: AppVerifyRoute,
  AppIndexRoute: AppIndexRoute,
  AppAddonsAddonIdRoute: AppAddonsAddonIdRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/onboarding': typeof OnboardingRoute
  '/settings': typeof AppSettingsRoute
  '/statistics': typeof AppStatisticsRoute
  '/verify': typeof AppVerifyRoute
  '/': typeof AppIndexRoute
  '/addons/$addonId': typeof AppAddonsAddonIdRoute
}

export interface FileRoutesByTo {
  '/onboarding': typeof OnboardingRoute
  '/settings': typeof AppSettingsRoute
  '/statistics': typeof AppStatisticsRoute
  '/verify': typeof AppVerifyRoute
  '/': typeof AppIndexRoute
  '/addons/$addonId': typeof AppAddonsAddonIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/onboarding': typeof OnboardingRoute
  '/_app/settings': typeof AppSettingsRoute
  '/_app/statistics': typeof AppStatisticsRoute
  '/_app/verify': typeof AppVerifyRoute
  '/_app/': typeof AppIndexRoute
  '/_app/addons/$addonId': typeof AppAddonsAddonIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/onboarding'
    | '/settings'
    | '/statistics'
    | '/verify'
    | '/'
    | '/addons/$addonId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/onboarding'
    | '/settings'
    | '/statistics'
    | '/verify'
    | '/'
    | '/addons/$addonId'
  id:
    | '__root__'
    | '/_app'
    | '/onboarding'
    | '/_app/settings'
    | '/_app/statistics'
    | '/_app/verify'
    | '/_app/'
    | '/_app/addons/$addonId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  OnboardingRoute: typeof OnboardingRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  OnboardingRoute: OnboardingRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/onboarding"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/settings",
        "/_app/statistics",
        "/_app/verify",
        "/_app/",
        "/_app/addons/$addonId"
      ]
    },
    "/onboarding": {
      "filePath": "onboarding.tsx"
    },
    "/_app/settings": {
      "filePath": "_app/settings.tsx",
      "parent": "/_app"
    },
    "/_app/statistics": {
      "filePath": "_app/statistics.tsx",
      "parent": "/_app"
    },
    "/_app/verify": {
      "filePath": "_app/verify.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/addons/$addonId": {
      "filePath": "_app/addons/$addonId.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
